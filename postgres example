Чтобы сконфигурировать работоспособную базу данных PostgreSQL в кластере Kubernetes, вам понадобится выполнить следующие шаги:

1. Создайте YAML-файл для конфигурации базы данных PostgreSQL. Вот пример:

```yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: your_username
            - name: POSTGRES_PASSWORD
              value: your_password
            - name: POSTGRES_DB
              value: your_database
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-data-pvc
```

Важно:
- Замените `your_username`, `your_password` и `your_database` соответствующими значениями.
- Убедитесь, что используемое изображение PostgreSQL соответствует вашим требованиям.

2. Сохраните этот YAML-файл, например, как `postgres.yaml`.

3. Запустите YAML-файл, используя команду `kubectl apply -f postgres.yaml`.

Теперь база данных PostgreSQL будет развернута в вашем кластере Kubernetes с указанными параметрами. У вас будет доступ к сервису с именем `postgres` и портом `5432`. Вы можете использовать эти данные для подключения к базе данных из вашего приложения. Убедитесь, что Kubernetes-кластер и инструмент `kubectl` правильно настроены для взаимодействия с вашим кластером.
